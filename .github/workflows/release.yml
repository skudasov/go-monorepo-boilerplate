on:
  push:
    tags:
      - '**/v*.*.*'  # Trigger only on tags with the format $package/vX.X.X

permissions:
  contents: write
  packages: write

jobs:
  release_binaries:
    strategy:
      matrix:
        platform: [ "linux", "darwin" ]
        goarch: [ "amd64", "arm64" ]
    name: release linux/amd64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Extract Package Name from Tag
        id: extract_package_name
        run: |
          TAG_REF="${GITHUB_REF#refs/tags/}"
          PACKAGE_NAME=$(echo "$TAG_REF" | cut -d'/' -f1)
          VERSION=$(echo "$TAG_REF" | cut -d'/' -f2)
          echo "Tag Reference: $TAG_REF"
          echo "Package Name: $PACKAGE_NAME"
          echo "Version: $VERSION"
          
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Show Package Name and Version
        run: |
          echo "Package Name: ${{ env.PACKAGE_NAME }}"
          echo "Version: ${{ env.VERSION }}"
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sudo apt-get install -y gh
          echo "${GITHUB_TOKEN}" | gh auth login --with-token
          gh release create "${{ env.VERSION }}" --title "${{ env.PACKAGE_NAME }} v${{ env.VERSION }}" --notes "Release for ${{ env.PACKAGE_NAME }} version ${{ env.VERSION }}"
      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.platform }}
          goarch: ${{ matrix.goarch }}
          release_name: ${{ env.PACKAGE_NAME }}
          release_tag: ${{ env.VERSION }}
          project_path: ${{ env.PACKAGE_NAME }}
          asset_name: ${{ env.PACKAGE_NAME }}-${{ env.VERSION }}-${{ matrix.platform }}-${{ matrix.goarch }}
